width = 800;
height = 600;
people = {name = "YGH",age = 13,sex = true}
function f(x ,y)
  return x+y,x*y,x-y
end

static void viewStack(lua_State* L)
  {
    int i;
    int top = lua_gettop(L);
    for(int i = 1;i<=top;i++)
    {
      int t = lua_type(L,i);
      switch(t){
      case LUA_TSTRING:
      {   
         // string 
          printf("%s",lua_tostring(L,i));
          break; 
      }   
      case LUA_TBOOLEAN:
      {   
         //  _Bool 
         printf(lua_toboolean(L,i)?"true":"false"); 
        break;
      }
      case LUA_TNUMBER:
      {
         printf("%g",lua_tonumber(L,i));
         break;
      }
      default:
      {
        printf("%s",lua_typename(L,t));
        break;
      }
     }
     printf("     ");
  }      
   printf("\n");
}

const char* getStringField(lua_State* L, const char* key) {
	const char* name;
	lua_pushstring(L, key);
    viewStack(L);
	//以栈顶元素作为key ，在lua的内部协议里使用key 和 指定索引的table获取value ，并将key弹出 value压入  此时的索引为-2
	lua_gettable(L, -2);
	if (!lua_isstring(L, -1)) {
		printf("the key is not string");
	}
	name = lua_tostring(L, -1);
	lua_pop(L, 1);
	return name;
}

